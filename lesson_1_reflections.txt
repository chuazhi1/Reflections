How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You can review the difference and where you've typed wrongly.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can revert back to any point in time when needed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Not too many version controls saved. Version controls are also meaningful. You also know what you've committed.
    Cons: May forget to save.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because it depends on whether it's saved automatically or not. If it's saved automatically, each file has to be treated separately.

How can you use the commands git log and git diff to view the history of files?

    Git log is used to view all of the commits made to the file. Git log is used to view the differences between different commits.

How might using version control make you more confident to make changes that
could break something?

    I could go back to it anytime if it breaks.

Now that you have your workspace set up, what do you want to try using Git for?

    Code version controls.